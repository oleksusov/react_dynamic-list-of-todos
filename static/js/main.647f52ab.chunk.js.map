{"version":3,"sources":["types/FilterValues.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterValues","TodoList","todos","selectedItem","setSelectedItem","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","setQuery","filter","setFilter","name","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","userFromServer","href","email","App","setTodos","todosFromServer","visibleTodos","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.647f52ab.chunk.js","sourcesContent":["export enum FilterValues {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedItem: Todo | null,\n  setSelectedItem: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedItem,\n  setSelectedItem,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light':\n              selectedItem && selectedItem.id === todo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              { 'has-text-danger': !todo.completed },\n              { 'has-text-success': todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedItem(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={\n                    selectedItem && selectedItem.id === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'\n                  }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { FilterValues } from '../../types/FilterValues';\n\ntype Props = {\n  query: string,\n  setQuery: (query: string) => void,\n  filter: string,\n  setFilter: (filter: FilterValues) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filter,\n  setFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            name=\"filterSelector\"\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event => {\n              setFilter(event.target.value as FilterValues);\n            })}\n          >\n            <option value={FilterValues.All}>All</option>\n            <option value={FilterValues.Active}>Active</option>\n            <option value={FilterValues.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          name=\"queryInput\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event => {\n            setQuery(event.target.value);\n          })}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedItem: Todo,\n  setSelectedItem: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedItem,\n  setSelectedItem,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedItem.userId)\n      .then(userFromServer => setUser(userFromServer));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedItem.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedItem(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedItem.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedItem.completed ? (\n                <span className=\"has-text-success\">Done</span>\n              ) : (\n                <span className=\"has-text-danger\">Planned</span>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { FilterValues } from './types/FilterValues';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedItem, setSelectedItem] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(FilterValues.All);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  let visibleTodos = todos.filter(todo => {\n    switch (filter) {\n      case FilterValues.Active:\n        return !todo.completed;\n\n      case FilterValues.Completed:\n        return todo.completed;\n\n      default:\n        return true;\n    }\n  });\n\n  if (query) {\n    visibleTodos = visibleTodos.filter(todo => {\n      return todo.title.toLowerCase().includes(query.toLowerCase());\n    });\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filter={filter}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedItem={selectedItem}\n                  setSelectedItem={setSelectedItem}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedItem && (\n        <TodoModal\n          selectedItem={selectedItem}\n          setSelectedItem={setSelectedItem}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}